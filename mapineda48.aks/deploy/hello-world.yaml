---
apiVersion: v1
kind: Namespace
metadata:
  name: hello
  labels:
    app.kubernetes.io/name: hello
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-deploy
  namespace: hello
  labels:
    app.kubernetes.io/name: hello
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: hello
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hello
    spec:
      containers:
        - name: hello
          image: nginxdemos/hello:latest
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 20
          resources:
            requests:
              cpu: "50m"
              memory: "64Mi"
            limits:
              cpu: "250m"
              memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: hello-svc
  namespace: hello
  labels:
    app.kubernetes.io/name: hello
spec:
  selector:
    app.kubernetes.io/name: hello
  ports:
    - name: http
      port: 80
      targetPort: 80
  type: ClusterIP
---
# Ingress con NGINX + cert-manager + ExternalDNS
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hello-ing
  namespace: hello
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-dev
    external-dns.alpha.kubernetes.io/ttl: "300"
    # Si quieres forzar a un IP/FQDN específico del LB, descomenta y ajusta:
    # external-dns.alpha.kubernetes.io/target: "<IP-o-FQDN-del-LB-del-ingress>"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - hello-world-aks.mapineda49.de
      secretName: hello-world-aks-tls
  rules:
    - host: hello-world-aks.mapineda49.de
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: hello-svc
                port:
                  number: 80
---
# Certificate explícito (útil si no usas el "ingress-shim" por defecto)
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: hello-world-aks-cert
  namespace: hello
spec:
  secretName: hello-world-aks-tls
  commonName: hello-world-aks.mapineda49.de
  dnsNames:
    - hello-world-aks.mapineda49.de
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt-dev
