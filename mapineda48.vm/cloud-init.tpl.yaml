#cloud-config
package_update: true
package_upgrade: true

packages:
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg
  - lsb-release
  - software-properties-common
  - fuse3

write_files:
  - path: /etc/blobfuse2.yaml
    permissions: '0644'
    content: |
      version: 2
      logging:
        type: syslog
        level: LOG_INFO

      components:
        - libfuse
        - azstorage

      azstorage:
        type: block
        account-name: ${storage_account_name}
        account-key: ${storage_account_key}
        container: deploy

      libfuse:
        mount-path: /mnt/deploy
        allow-other: true
        mount-options:
          - uid=1000
          - gid=999
          - umask=002

  - path: /etc/fuse.conf
    append: true
    content: |
      user_allow_other

  - path: /etc/systemd/system/mapineda48-blobfuse2-deploy.service
    permissions: '0644'
    content: |
      [Unit]
      Description=Mount Blob Storage with Blobfuse2
      After=network-online.target
      Wants=network-online.target

      [Service]
      User=azureuser
      Group=docker
      Type=simple
      ExecStart=/usr/bin/blobfuse2 mount /mnt/deploy --config-file=/etc/blobfuse2.yaml --allow-other
      Restart=on-failure
      RemainAfterExit=yes

      [Install]
      WantedBy=multi-user.target

  - path: /etc/systemd/system/mapineda48-docker-socket.service
    permissions: '0644'
    content: |
      [Unit]
      Description=Docker Image Refresh Socket Server
      After=network.target docker.service mapineda48-blobfuse2-deploy.service
      Requires=docker.service 

      [Service]
      Environment=NODE_PATH=/usr/lib/node_modules
      ExecStart=/usr/bin/env node /mnt/deploy/mapineda48.vm/docker/socket.js
      Restart=always
      RestartSec=5
      User=root
      StandardOutput=journal
      StandardError=journal

      [Install]
      WantedBy=multi-user.target

  - path: /etc/systemd/system/mapineda48-docker-compose.service
    permissions: '0644'
    content: |
      [Unit]
      Description=Docker Compose Service for mapineda48
      Requires=docker.service mapineda48-blobfuse2-deploy.service
      After=docker.service mapineda48-blobfuse2-deploy.service

      [Service]
      Type=oneshot
      WorkingDirectory=/mnt/deploy/mapineda48.vm/docker/compose
      ExecStart=/usr/bin/docker compose up
      ExecStop=/usr/bin/docker compose down
      RemainAfterExit=true

      [Install]
      WantedBy=multi-user.target

runcmd:
  # Instalar Docker
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
  - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list
  - apt-get update
  - apt-get install -y docker-ce docker-ce-cli containerd.io

  # Crear grupo fuse si no existe y agregar usuario a grupos necesarios
  - groupadd --system fuse || true
  - usermod -aG docker azureuser
  - usermod -aG fuse azureuser

  # Instalar Blobfuse2
  - curl -L https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb -o packages-microsoft-prod.deb
  - dpkg -i packages-microsoft-prod.deb
  - apt-get update
  - apt-get install -y blobfuse2

  # Crear punto de montaje
  - mkdir -p /mnt/deploy
  - chown azureuser:docker /mnt/deploy
  - chmod 775 /mnt/deploy

  # Iniciar blob2
  - blobfuse2 mount /mnt/deploy --config-file=/etc/blobfuse2.yaml --allow-other

  # Crear carpetas necesarias
  - mkdir -p /mnt/deploy/mapineda48.vm/ngnix/certs
  - mkdir -p /mnt/deploy/mapineda48.vm/ngnix/vhost
  - mkdir -p /mnt/deploy/mapineda48.vm/ngnix/html/.well-known/acme-challenge
  - mkdir -p /mnt/deploy/mapineda48.vm/acme

  # Permisos para que grupo docker acceda a los vol√∫menes
  - chown -R azureuser:docker /mnt/deploy/mapineda48.vm
  - chmod -R 775 /mnt/deploy/mapineda48.vm

  # Nodejs
  - curl -fsSL https://deb.nodesource.com/setup_lts.x | bash -
  - apt-get install -y nodejs
  - npm install -g dockerode@4.0.7 express@5.1.0

  # Habilitar el servicios
  - systemctl enable mapineda48-blobfuse2-deploy
  - systemctl enable mapineda48-docker-socket
  - systemctl enable mapineda48-docker-compose

  # Reiniciar la VM para aplicar cambios de grupos
  - reboot